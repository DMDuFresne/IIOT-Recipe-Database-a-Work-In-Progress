
x-default-logging:
  &default-logging
  logging:
    options:
      max-size: '100m'
      max-file: '5'
    driver: json-file

services:

  # Mosquitto - MQTT Broker
  broker-standalone:
    <<: *default-logging
    build: ./mosquitto
    image: my-mosquitto
    container_name: iiot-recipe-Broker
    hostname: broker
    restart: unless-stopped
    ports:
      - "1993:1883"
      - "9001:9001"
    networks:
      - iiot-recipe-network
    environment:
      MOSQUITTO_USERNAME: ${MOSQUITTO_USERNAME:-admin}
      MOSQUITTO_PASSWORD: ${MOSQUITTO_PASSWORD:-password}
    volumes:
      - iiot-recipe_broker_config:/mosquitto/config:rw
      - iiot-recipe_broker_data:/mosquitto/data:rw
      - iiot-recipe_broker_logs:/mosquitto/log:rw

  # Postgres - Database
  postgres:
    <<: *default-logging
    image: postgres:${POSTGRES_VERSION:-latest}
    restart: unless-stopped
    container_name: iiot-recipe-Database
    hostname: database
    ports:
      - "5432:5432"
    networks:
      - iiot-recipe-network
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-iiot}
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - iiot-recipe_database_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d

  # Node Red - Backend - DB Service
  node-red-backend:
    <<: *default-logging
    build: ./node-red-backend
    restart: unless-stopped
    container_name: iiot-recipe-NodeRed-Backend
    hostname: backend
    ports:
      - 1880:1880
    networks:
      - iiot-recipe-network
    volumes:
      - iiot-recipe_server_data:/data
    environment:
      TZ: ${TIMEZONE:-America/Chicago}
      NODE_RED_USERNAME: ${NODE_RED_USERNAME:-admin}
      NODE_RED_PASSWORD: ${NODE_RED_PASSWORD:-password}

  # Node Red - Frontend - DB Service
  node-red-frontend:
    <<: *default-logging
    build: ./node-red-frontend
    restart: unless-stopped
    container_name: iiot-recipe-NodeRed-Frontend
    hostname: frontend
    ports:
      - 1890:1880
    networks:
      - iiot-recipe-network
    volumes:
      - iiot-recipe_frontend_data:/data
    environment:
      TZ: ${TIMEZONE:-America/Chicago}
      NODE_RED_USERNAME: ${NODE_RED_USERNAME:-admin}
      NODE_RED_PASSWORD: ${NODE_RED_PASSWORD:-password}

  # Postgres to MQTT - CDC Service
  pg-iiot-bridge:
    <<: *default-logging
    build:
      context: ./pgMqttBridge
    container_name: iiot-recipe-pg-iiot-bridge
    depends_on:
      - broker-standalone
      - postgres
    hostname: listener
    networks:
      - iiot-recipe-network
    environment:
      DB_NAME: ${POSTGRES_DB:-iiot}
      DB_USER: ${POSTGRES_USER:-admin}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-password}
      DB_HOST: database
      DB_PORT: 5432
      MQTT_BROKER: broker
      MQTT_PORT: 1883
      MQTT_USER: ${MOSQUITTO_USERNAME:-admin}
      MQTT_PASSWORD: ${MOSQUITTO_PASSWORD:-password}
      MQTT_TOPIC: database/notifications

networks:
  iiot-recipe-network:

volumes:
  iiot-recipe_broker_config:
  iiot-recipe_broker_data:
  iiot-recipe_broker_logs:
  iiot-recipe_database_data:
  iiot-recipe_server_data:
  iiot-recipe_frontend_data:
